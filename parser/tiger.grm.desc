
state 0:

	program : . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 151
	expr	goto 3
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 1:

	expr : lvalue .  (reduce by rule 4)
	expr : lvalue . ASSIGN expr 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK expr RBRACK 

	LBRACK	shift 17
	DOT	shift 16
	ASSIGN	shift 15


	.	reduce by rule 4


state 2:

	expr : binary_expr .  (reduce by rule 6)



	.	reduce by rule 6


state 3:

	program : expr .  (reduce by rule 0)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	expr : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 5:

	expr : BREAK .  (reduce by rule 16)



	.	reduce by rule 16


state 6:

	expr : LET . decl_seq IN expr_seq END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decl_seq	goto 36
	type_decls	goto 35
	type_decl	goto 34
	var_decls	goto 33
	var_decl	goto 32
	func_decls	goto 31
	func_decl	goto 30

	.	error


state 7:

	expr : FOR . ID ASSIGN expr TO expr DO expr 

	ID	shift 40


	.	error


state 8:

	expr : WHILE . expr DO expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 41
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 9:

	expr : IF . expr THEN expr 
	expr : IF . expr THEN expr ELSE expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 42
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 10:

	expr : MINUS . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 43
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 11:

	expr : LPAREN . expr_seq RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 45
	binary_expr	goto 2
	expr_seq	goto 44
	lvalue	goto 1

	.	reduce by rule 32


state 12:

	expr : STRING .  (reduce by rule 1)



	.	reduce by rule 1


state 13:

	expr : INT .  (reduce by rule 2)



	.	reduce by rule 2


state 14:

	expr : ID . LPAREN expr_list RPAREN 
	expr : ID . LBRACE field_list RBRACE 
	expr : ID . LBRACK expr RBRACK OF expr 
	lvalue : ID .  (reduce by rule 40)
	lvalue : ID . LBRACK expr RBRACK 

	LPAREN	shift 48
	LBRACK	shift 47
	LBRACE	shift 46


	.	reduce by rule 40


state 15:

	expr : lvalue ASSIGN . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 49
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 16:

	lvalue : lvalue DOT . ID 

	ID	shift 50


	.	error


state 17:

	lvalue : lvalue LBRACK . expr RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 51
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 18:

	binary_expr : expr OR . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 52
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 19:

	binary_expr : expr AND . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 53
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 20:

	binary_expr : expr GE . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 54
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 21:

	binary_expr : expr GT . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 55
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 22:

	binary_expr : expr LE . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 56
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 23:

	binary_expr : expr LT . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 57
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 24:

	binary_expr : expr NEQ . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 58
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 25:

	binary_expr : expr EQ . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 59
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 26:

	binary_expr : expr DIVIDE . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 60
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 27:

	binary_expr : expr TIMES . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 61
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 28:

	binary_expr : expr MINUS . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 62
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 29:

	binary_expr : expr PLUS . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 63
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 30:

	func_decls : func_decl .  (reduce by rule 68)



	.	reduce by rule 68


state 31:

	decl_seq : func_decls . not_func_decls 
	func_decls : func_decls . func_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 67
	type_decl	goto 34
	var_decls	goto 66
	var_decl	goto 32
	func_decl	goto 65
	not_func_decls	goto 64

	.	reduce by rule 73


state 32:

	var_decls : var_decl .  (reduce by rule 61)



	.	reduce by rule 61


state 33:

	decl_seq : var_decls . not_var_decls 
	var_decls : var_decls . var_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 71
	type_decl	goto 34
	var_decl	goto 70
	not_var_decls	goto 69
	func_decls	goto 68
	func_decl	goto 30

	.	reduce by rule 64


state 34:

	type_decls : type_decl .  (reduce by rule 48)



	.	reduce by rule 48


state 35:

	decl_seq : type_decls . not_type_decls 
	type_decls : type_decls . type_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decl	goto 75
	not_type_decls	goto 74
	var_decls	goto 73
	var_decl	goto 32
	func_decls	goto 72
	func_decl	goto 30

	.	reduce by rule 59


state 36:

	expr : LET decl_seq . IN expr_seq END 

	IN	shift 76


	.	error


state 37:

	type_decl : TYPE . ID EQ type_val 

	ID	shift 77


	.	error


state 38:

	var_decl : VAR . ID ASSIGN expr 
	var_decl : VAR . ID COLON ID ASSIGN expr 

	ID	shift 78


	.	error


state 39:

	func_decl : FUNCTION . ID LPAREN type_fields RPAREN EQ expr 
	func_decl : FUNCTION . ID LPAREN type_fields RPAREN COLON ID EQ expr 

	ID	shift 79


	.	error


state 40:

	expr : FOR ID . ASSIGN expr TO expr DO expr 

	ASSIGN	shift 80


	.	error


state 41:

	expr : WHILE expr . DO expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 81


	.	error


state 42:

	expr : IF expr . THEN expr 
	expr : IF expr . THEN expr ELSE expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 82


	.	error


state 43:

	expr : MINUS expr .  (reduce by rule 5)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 



	.	reduce by rule 5


state 44:

	expr : LPAREN expr_seq . RPAREN 
	expr_seq : expr_seq . SEMICOLON expr 

	SEMICOLON	shift 84
	RPAREN	shift 83


	.	error


state 45:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	expr_seq : expr .  (reduce by rule 31)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 31


state 46:

	expr : ID LBRACE . field_list RBRACE 

	ID	shift 87

	field_list	goto 86
	field	goto 85

	.	reduce by rule 38


state 47:

	expr : ID LBRACK . expr RBRACK OF expr 
	lvalue : ID LBRACK . expr RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 88
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 48:

	expr : ID LPAREN . expr_list RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 90
	binary_expr	goto 2
	expr_list	goto 89
	lvalue	goto 1

	.	reduce by rule 35


state 49:

	expr : lvalue ASSIGN expr .  (reduce by rule 7)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 7


state 50:

	lvalue : lvalue DOT ID .  (reduce by rule 41)



	.	reduce by rule 41


state 51:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	lvalue : lvalue LBRACK expr . RBRACK 

	RBRACK	shift 91
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 52:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	binary_expr : expr OR expr .  (reduce by rule 29)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 29


state 53:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr AND expr .  (reduce by rule 28)
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 28


state 54:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr GE expr .  (reduce by rule 26)
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 55:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr GT expr .  (reduce by rule 25)
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 56:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr LE expr .  (reduce by rule 27)
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 57:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr LT expr .  (reduce by rule 24)
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 58:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr NEQ expr .  (reduce by rule 23)
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 59:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr EQ expr .  (reduce by rule 22)
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 22
	OR	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 60:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr DIVIDE expr .  (reduce by rule 21)
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 



	.	reduce by rule 21


state 61:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr TIMES expr .  (reduce by rule 20)
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 



	.	reduce by rule 20


state 62:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr MINUS expr .  (reduce by rule 19)
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 19


state 63:

	binary_expr : expr . PLUS expr 
	binary_expr : expr PLUS expr .  (reduce by rule 18)
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 18


state 64:

	decl_seq : func_decls not_func_decls .  (reduce by rule 45)



	.	reduce by rule 45


state 65:

	func_decls : func_decls func_decl .  (reduce by rule 67)



	.	reduce by rule 67


state 66:

	var_decls : var_decls . var_decl 
	not_func_decls : var_decls . not_var_decls 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 71
	type_decl	goto 34
	var_decl	goto 70
	not_var_decls	goto 92
	func_decls	goto 68
	func_decl	goto 30

	.	reduce by rule 64


state 67:

	type_decls : type_decls . type_decl 
	not_func_decls : type_decls . not_type_decls 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decl	goto 75
	not_type_decls	goto 93
	var_decls	goto 73
	var_decl	goto 32
	func_decls	goto 72
	func_decl	goto 30

	.	reduce by rule 59


state 68:

	not_var_decls : func_decls . not_func_decls 
	func_decls : func_decls . func_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 67
	type_decl	goto 34
	var_decls	goto 66
	var_decl	goto 32
	func_decl	goto 65
	not_func_decls	goto 94

	.	reduce by rule 73


state 69:

	decl_seq : var_decls not_var_decls .  (reduce by rule 46)



	.	reduce by rule 46


state 70:

	var_decls : var_decls var_decl .  (reduce by rule 60)



	.	reduce by rule 60


state 71:

	type_decls : type_decls . type_decl 
	not_var_decls : type_decls . not_type_decls 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decl	goto 75
	not_type_decls	goto 95
	var_decls	goto 73
	var_decl	goto 32
	func_decls	goto 72
	func_decl	goto 30

	.	reduce by rule 59


state 72:

	not_type_decls : func_decls . not_func_decls 
	func_decls : func_decls . func_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 67
	type_decl	goto 34
	var_decls	goto 66
	var_decl	goto 32
	func_decl	goto 65
	not_func_decls	goto 96

	.	reduce by rule 73


state 73:

	not_type_decls : var_decls . not_var_decls 
	var_decls : var_decls . var_decl 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	type_decls	goto 71
	type_decl	goto 34
	var_decl	goto 70
	not_var_decls	goto 97
	func_decls	goto 68
	func_decl	goto 30

	.	reduce by rule 64


state 74:

	decl_seq : type_decls not_type_decls .  (reduce by rule 44)



	.	reduce by rule 44


state 75:

	type_decls : type_decls type_decl .  (reduce by rule 47)



	.	reduce by rule 47


state 76:

	expr : LET decl_seq IN . expr_seq END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 45
	binary_expr	goto 2
	expr_seq	goto 98
	lvalue	goto 1

	.	reduce by rule 32


state 77:

	type_decl : TYPE ID . EQ type_val 

	EQ	shift 99


	.	error


state 78:

	var_decl : VAR ID . ASSIGN expr 
	var_decl : VAR ID . COLON ID ASSIGN expr 

	COLON	shift 101
	ASSIGN	shift 100


	.	error


state 79:

	func_decl : FUNCTION ID . LPAREN type_fields RPAREN EQ expr 
	func_decl : FUNCTION ID . LPAREN type_fields RPAREN COLON ID EQ expr 

	LPAREN	shift 102


	.	error


state 80:

	expr : FOR ID ASSIGN . expr TO expr DO expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 103
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 81:

	expr : WHILE expr DO . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 104
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 82:

	expr : IF expr THEN . expr 
	expr : IF expr THEN . expr ELSE expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 105
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 83:

	expr : LPAREN expr_seq RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 84:

	expr_seq : expr_seq SEMICOLON . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 106
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 85:

	field_list : field .  (reduce by rule 37)



	.	reduce by rule 37


state 86:

	expr : ID LBRACE field_list . RBRACE 
	field_list : field_list . COMMA field 

	COMMA	shift 108
	RBRACE	shift 107


	.	error


state 87:

	field : ID . EQ expr 

	EQ	shift 109


	.	error


state 88:

	expr : ID LBRACK expr . RBRACK OF expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	lvalue : ID LBRACK expr . RBRACK 

	RBRACK	shift 110
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 89:

	expr : ID LPAREN expr_list . RPAREN 
	expr_list : expr_list . COMMA expr 

	COMMA	shift 112
	RPAREN	shift 111


	.	error


state 90:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	expr_list : expr .  (reduce by rule 34)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 34


state 91:

	lvalue : lvalue LBRACK expr RBRACK .  (reduce by rule 42)



	.	reduce by rule 42


state 92:

	not_func_decls : var_decls not_var_decls .  (reduce by rule 72)



	.	reduce by rule 72


state 93:

	not_func_decls : type_decls not_type_decls .  (reduce by rule 71)



	.	reduce by rule 71


state 94:

	not_var_decls : func_decls not_func_decls .  (reduce by rule 63)



	.	reduce by rule 63


state 95:

	not_var_decls : type_decls not_type_decls .  (reduce by rule 62)



	.	reduce by rule 62


state 96:

	not_type_decls : func_decls not_func_decls .  (reduce by rule 57)



	.	reduce by rule 57


state 97:

	not_type_decls : var_decls not_var_decls .  (reduce by rule 58)



	.	reduce by rule 58


state 98:

	expr : LET decl_seq IN expr_seq . END 
	expr_seq : expr_seq . SEMICOLON expr 

	SEMICOLON	shift 84
	END	shift 113


	.	error


state 99:

	type_decl : TYPE ID EQ . type_val 

	ID	shift 117
	LBRACE	shift 116
	ARRAY	shift 115

	type_val	goto 114

	.	error


state 100:

	var_decl : VAR ID ASSIGN . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 118
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 101:

	var_decl : VAR ID COLON . ID ASSIGN expr 

	ID	shift 119


	.	error


state 102:

	func_decl : FUNCTION ID LPAREN . type_fields RPAREN EQ expr 
	func_decl : FUNCTION ID LPAREN . type_fields RPAREN COLON ID EQ expr 

	ID	shift 122

	type_fields	goto 121
	type_field	goto 120

	.	reduce by rule 55


state 103:

	expr : FOR ID ASSIGN expr . TO expr DO expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 123


	.	error


state 104:

	expr : WHILE expr DO expr .  (reduce by rule 14)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 14


state 105:

	expr : IF expr THEN expr .  (reduce by rule 12)
	expr : IF expr THEN expr . ELSE expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 124


	.	reduce by rule 12


state 106:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	expr_seq : expr_seq SEMICOLON expr .  (reduce by rule 30)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 30


state 107:

	expr : ID LBRACE field_list RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 108:

	field_list : field_list COMMA . field 

	ID	shift 87

	field	goto 125

	.	error


state 109:

	field : ID EQ . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 126
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 110:

	expr : ID LBRACK expr RBRACK . OF expr 
	lvalue : ID LBRACK expr RBRACK .  (reduce by rule 43)

	OF	shift 127


	.	reduce by rule 43


state 111:

	expr : ID LPAREN expr_list RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 112:

	expr_list : expr_list COMMA . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 128
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 113:

	expr : LET decl_seq IN expr_seq END .  (reduce by rule 17)



	.	reduce by rule 17


state 114:

	type_decl : TYPE ID EQ type_val .  (reduce by rule 49)



	.	reduce by rule 49


state 115:

	type_val : ARRAY . OF ID 

	OF	shift 129


	.	error


state 116:

	type_val : LBRACE . type_fields RBRACE 

	ID	shift 122

	type_fields	goto 130
	type_field	goto 120

	.	reduce by rule 55


state 117:

	type_val : ID .  (reduce by rule 50)



	.	reduce by rule 50


state 118:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	var_decl : VAR ID ASSIGN expr .  (reduce by rule 65)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 65


state 119:

	var_decl : VAR ID COLON ID . ASSIGN expr 

	ASSIGN	shift 131


	.	error


state 120:

	type_fields : type_field .  (reduce by rule 53)



	.	reduce by rule 53


state 121:

	type_fields : type_fields . COMMA type_field 
	func_decl : FUNCTION ID LPAREN type_fields . RPAREN EQ expr 
	func_decl : FUNCTION ID LPAREN type_fields . RPAREN COLON ID EQ expr 

	COMMA	shift 133
	RPAREN	shift 132


	.	error


state 122:

	type_field : ID . COLON ID 

	COLON	shift 134


	.	error


state 123:

	expr : FOR ID ASSIGN expr TO . expr DO expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 135
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 124:

	expr : IF expr THEN expr ELSE . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 136
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 125:

	field_list : field_list COMMA field .  (reduce by rule 36)



	.	reduce by rule 36


state 126:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	field : ID EQ expr .  (reduce by rule 39)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 39


state 127:

	expr : ID LBRACK expr RBRACK OF . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 137
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 128:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	expr_list : expr_list COMMA expr .  (reduce by rule 33)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 33


state 129:

	type_val : ARRAY OF . ID 

	ID	shift 138


	.	error


state 130:

	type_val : LBRACE type_fields . RBRACE 
	type_fields : type_fields . COMMA type_field 

	COMMA	shift 133
	RBRACE	shift 139


	.	error


state 131:

	var_decl : VAR ID COLON ID ASSIGN . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 140
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 132:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN . EQ expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN . COLON ID EQ expr 

	COLON	shift 142
	EQ	shift 141


	.	error


state 133:

	type_fields : type_fields COMMA . type_field 

	ID	shift 122

	type_field	goto 143

	.	error


state 134:

	type_field : ID COLON . ID 

	ID	shift 144


	.	error


state 135:

	expr : FOR ID ASSIGN expr TO expr . DO expr 
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 145


	.	error


state 136:

	expr : IF expr THEN expr ELSE expr .  (reduce by rule 13)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 13


state 137:

	expr : ID LBRACK expr RBRACK OF expr .  (reduce by rule 11)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 11


state 138:

	type_val : ARRAY OF ID .  (reduce by rule 52)



	.	reduce by rule 52


state 139:

	type_val : LBRACE type_fields RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 140:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	var_decl : VAR ID COLON ID ASSIGN expr .  (reduce by rule 66)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 66


state 141:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN EQ . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 146
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 142:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON . ID EQ expr 

	ID	shift 147


	.	error


state 143:

	type_fields : type_fields COMMA type_field .  (reduce by rule 54)



	.	reduce by rule 54


state 144:

	type_field : ID COLON ID .  (reduce by rule 56)



	.	reduce by rule 56


state 145:

	expr : FOR ID ASSIGN expr TO expr DO . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 148
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 146:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN EQ expr .  (reduce by rule 69)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 69


state 147:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID . EQ expr 

	EQ	shift 149


	.	error


state 148:

	expr : FOR ID ASSIGN expr TO expr DO expr .  (reduce by rule 15)
	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 15


state 149:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ . expr 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	expr	goto 150
	binary_expr	goto 2
	lvalue	goto 1

	.	error


state 150:

	binary_expr : expr . PLUS expr 
	binary_expr : expr . MINUS expr 
	binary_expr : expr . TIMES expr 
	binary_expr : expr . DIVIDE expr 
	binary_expr : expr . EQ expr 
	binary_expr : expr . NEQ expr 
	binary_expr : expr . LT expr 
	binary_expr : expr . GT expr 
	binary_expr : expr . GE expr 
	binary_expr : expr . LE expr 
	binary_expr : expr . AND expr 
	binary_expr : expr . OR expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ expr .  (reduce by rule 70)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 70


state 151:


	EOF	accept


	.	error

516 of 1050 action table entries left after compaction
182 goto table entries
