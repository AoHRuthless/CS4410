49 shift/reduce conflicts

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 39)
error:  state 50: shift/reduce conflict (shift OR, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift AND, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift GE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift GT, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift LE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift LT, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift NEQ, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift EQ, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift DIVIDE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift TIMES, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift MINUS, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift PLUS, reduce by rule 6)
error:  state 73: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift PLUS, reduce by rule 14)
error:  state 107: shift/reduce conflict (shift OR, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift AND, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift GE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift GT, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift LE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift LT, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift NEQ, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift EQ, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift DIVIDE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift TIMES, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift MINUS, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift PLUS, reduce by rule 11)
error:  state 119: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 0:

	program : . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 122
	expr	goto 2
	lvalue	goto 1

	.	error


state 1:

	expr : lvalue .  (reduce by rule 4)
	expr : lvalue . ASSIGN expr 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK expr RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 4


state 2:

	program : expr .  (reduce by rule 0)
	expr : expr . binary_op expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 0


state 3:

	expr : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 4:

	expr : BREAK .  (reduce by rule 16)



	.	reduce by rule 16


state 5:

	expr : LET . decl_seq IN expr_seq END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decl_seq	goto 34
	decl	goto 33
	type_decl	goto 32
	var_decl	goto 31
	func_decl	goto 30

	.	error


state 6:

	expr : FOR . ID ASSIGN expr TO expr DO expr 

	ID	shift 38


	.	error


state 7:

	expr : WHILE . expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 39
	lvalue	goto 1

	.	error


state 8:

	expr : IF . expr THEN expr 
	expr : IF . expr THEN expr ELSE expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 40
	lvalue	goto 1

	.	error


state 9:

	expr : MINUS . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 41
	lvalue	goto 1

	.	error


state 10:

	expr : LPAREN . expr_seq RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 43
	expr_seq	goto 42
	lvalue	goto 1

	.	reduce by rule 32


state 11:

	expr : STRING .  (reduce by rule 1)



	.	reduce by rule 1


state 12:

	expr : INT .  (reduce by rule 2)



	.	reduce by rule 2

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 39)

state 13:

	expr : ID . LPAREN expr_list RPAREN 
	expr : ID . LBRACE field_list RBRACE 
	expr : ID . LBRACK expr RBRACK OF expr 
	lvalue : ID .  (reduce by rule 39)
	lvalue : ID . LBRACK expr RBRACK 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44


	.	reduce by rule 39


state 14:

	expr : lvalue ASSIGN . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 47
	lvalue	goto 1

	.	error


state 15:

	lvalue : lvalue DOT . ID 

	ID	shift 48


	.	error


state 16:

	lvalue : lvalue LBRACK . expr RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 49
	lvalue	goto 1

	.	error


state 17:

	expr : expr binary_op . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 50
	lvalue	goto 1

	.	error


state 18:

	binary_op : OR .  (reduce by rule 29)



	.	reduce by rule 29


state 19:

	binary_op : AND .  (reduce by rule 28)



	.	reduce by rule 28


state 20:

	binary_op : GE .  (reduce by rule 26)



	.	reduce by rule 26


state 21:

	binary_op : GT .  (reduce by rule 25)



	.	reduce by rule 25


state 22:

	binary_op : LE .  (reduce by rule 27)



	.	reduce by rule 27


state 23:

	binary_op : LT .  (reduce by rule 24)



	.	reduce by rule 24


state 24:

	binary_op : NEQ .  (reduce by rule 23)



	.	reduce by rule 23


state 25:

	binary_op : EQ .  (reduce by rule 22)



	.	reduce by rule 22


state 26:

	binary_op : DIVIDE .  (reduce by rule 21)



	.	reduce by rule 21


state 27:

	binary_op : TIMES .  (reduce by rule 20)



	.	reduce by rule 20


state 28:

	binary_op : MINUS .  (reduce by rule 19)



	.	reduce by rule 19


state 29:

	binary_op : PLUS .  (reduce by rule 18)



	.	reduce by rule 18


state 30:

	decl : func_decl .  (reduce by rule 45)



	.	reduce by rule 45


state 31:

	decl : var_decl .  (reduce by rule 44)



	.	reduce by rule 44


state 32:

	decl : type_decl .  (reduce by rule 43)



	.	reduce by rule 43


state 33:

	decl_seq : decl .  (reduce by rule 47)



	.	reduce by rule 47


state 34:

	expr : LET decl_seq . IN expr_seq END 
	decl_seq : decl_seq . decl 

	IN	shift 52
	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decl	goto 51
	type_decl	goto 32
	var_decl	goto 31
	func_decl	goto 30

	.	error


state 35:

	type_decl : TYPE . ID EQ type_val 

	ID	shift 53


	.	error


state 36:

	var_decl : VAR . ID ASSIGN expr 
	var_decl : VAR . ID COLON ID ASSIGN expr 

	ID	shift 54


	.	error


state 37:

	func_decl : FUNCTION . ID LPAREN type_fields RPAREN EQ expr 
	func_decl : FUNCTION . ID LPAREN type_fields RPAREN COLON ID EQ expr 

	ID	shift 55


	.	error


state 38:

	expr : FOR ID . ASSIGN expr TO expr DO expr 

	ASSIGN	shift 56


	.	error


state 39:

	expr : expr . binary_op expr 
	expr : WHILE expr . DO expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 57

	binary_op	goto 17

	.	error


state 40:

	expr : expr . binary_op expr 
	expr : IF expr . THEN expr 
	expr : IF expr . THEN expr ELSE expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 58

	binary_op	goto 17

	.	error


state 41:

	expr : MINUS expr .  (reduce by rule 5)
	expr : expr . binary_op expr 


	binary_op	goto 17

	.	reduce by rule 5


state 42:

	expr : LPAREN expr_seq . RPAREN 
	expr_seq : expr_seq . SEMICOLON expr 

	SEMICOLON	shift 60
	RPAREN	shift 59


	.	error


state 43:

	expr : expr . binary_op expr 
	expr_seq : expr .  (reduce by rule 31)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 31


state 44:

	expr : ID LBRACE . field_list RBRACE 

	ID	shift 62

	field_list	goto 61

	.	reduce by rule 38


state 45:

	expr : ID LBRACK . expr RBRACK OF expr 
	lvalue : ID LBRACK . expr RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 63
	lvalue	goto 1

	.	error


state 46:

	expr : ID LPAREN . expr_list RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 65
	expr_list	goto 64
	lvalue	goto 1

	.	reduce by rule 35


state 47:

	expr : expr . binary_op expr 
	expr : lvalue ASSIGN expr .  (reduce by rule 7)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 7


state 48:

	lvalue : lvalue DOT ID .  (reduce by rule 40)



	.	reduce by rule 40


state 49:

	expr : expr . binary_op expr 
	lvalue : lvalue LBRACK expr . RBRACK 

	RBRACK	shift 66
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	error

error:  state 50: shift/reduce conflict (shift OR, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift AND, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift GE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift GT, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift LE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift LT, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift NEQ, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift EQ, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift DIVIDE, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift TIMES, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift MINUS, reduce by rule 6)
error:  state 50: shift/reduce conflict (shift PLUS, reduce by rule 6)

state 50:

	expr : expr . binary_op expr 
	expr : expr binary_op expr .  (reduce by rule 6)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 6


state 51:

	decl_seq : decl_seq decl .  (reduce by rule 46)



	.	reduce by rule 46


state 52:

	expr : LET decl_seq IN . expr_seq END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 43
	expr_seq	goto 67
	lvalue	goto 1

	.	reduce by rule 32


state 53:

	type_decl : TYPE ID . EQ type_val 

	EQ	shift 68


	.	error


state 54:

	var_decl : VAR ID . ASSIGN expr 
	var_decl : VAR ID . COLON ID ASSIGN expr 

	COLON	shift 70
	ASSIGN	shift 69


	.	error


state 55:

	func_decl : FUNCTION ID . LPAREN type_fields RPAREN EQ expr 
	func_decl : FUNCTION ID . LPAREN type_fields RPAREN COLON ID EQ expr 

	LPAREN	shift 71


	.	error


state 56:

	expr : FOR ID ASSIGN . expr TO expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 72
	lvalue	goto 1

	.	error


state 57:

	expr : WHILE expr DO . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 73
	lvalue	goto 1

	.	error


state 58:

	expr : IF expr THEN . expr 
	expr : IF expr THEN . expr ELSE expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 74
	lvalue	goto 1

	.	error


state 59:

	expr : LPAREN expr_seq RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 60:

	expr_seq : expr_seq SEMICOLON . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 75
	lvalue	goto 1

	.	error


state 61:

	expr : ID LBRACE field_list . RBRACE 
	field_list : field_list . COMMA ID EQ expr 

	COMMA	shift 77
	RBRACE	shift 76


	.	error


state 62:

	field_list : ID . EQ expr 

	EQ	shift 78


	.	error


state 63:

	expr : expr . binary_op expr 
	expr : ID LBRACK expr . RBRACK OF expr 
	lvalue : ID LBRACK expr . RBRACK 

	RBRACK	shift 79
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	error


state 64:

	expr : ID LPAREN expr_list . RPAREN 
	expr_list : expr_list . COMMA expr 

	COMMA	shift 81
	RPAREN	shift 80


	.	error


state 65:

	expr : expr . binary_op expr 
	expr_list : expr .  (reduce by rule 34)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 34


state 66:

	lvalue : lvalue LBRACK expr RBRACK .  (reduce by rule 41)



	.	reduce by rule 41


state 67:

	expr : LET decl_seq IN expr_seq . END 
	expr_seq : expr_seq . SEMICOLON expr 

	SEMICOLON	shift 60
	END	shift 82


	.	error


state 68:

	type_decl : TYPE ID EQ . type_val 

	ID	shift 86
	LBRACE	shift 85
	ARRAY	shift 84

	type_val	goto 83

	.	error


state 69:

	var_decl : VAR ID ASSIGN . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 87
	lvalue	goto 1

	.	error


state 70:

	var_decl : VAR ID COLON . ID ASSIGN expr 

	ID	shift 88


	.	error


state 71:

	func_decl : FUNCTION ID LPAREN . type_fields RPAREN EQ expr 
	func_decl : FUNCTION ID LPAREN . type_fields RPAREN COLON ID EQ expr 

	ID	shift 91

	type_fields	goto 90
	type_field	goto 89

	.	reduce by rule 54


state 72:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr . TO expr DO expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 92

	binary_op	goto 17

	.	error

error:  state 73: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 73: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 73:

	expr : expr . binary_op expr 
	expr : WHILE expr DO expr .  (reduce by rule 14)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 14


state 74:

	expr : expr . binary_op expr 
	expr : IF expr THEN expr .  (reduce by rule 12)
	expr : IF expr THEN expr . ELSE expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 93

	binary_op	goto 17

	.	reduce by rule 12


state 75:

	expr : expr . binary_op expr 
	expr_seq : expr_seq SEMICOLON expr .  (reduce by rule 30)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 30


state 76:

	expr : ID LBRACE field_list RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 77:

	field_list : field_list COMMA . ID EQ expr 

	ID	shift 94


	.	error


state 78:

	field_list : ID EQ . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 95
	lvalue	goto 1

	.	error


state 79:

	expr : ID LBRACK expr RBRACK . OF expr 
	lvalue : ID LBRACK expr RBRACK .  (reduce by rule 42)

	OF	shift 96


	.	reduce by rule 42


state 80:

	expr : ID LPAREN expr_list RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 81:

	expr_list : expr_list COMMA . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 97
	lvalue	goto 1

	.	error


state 82:

	expr : LET decl_seq IN expr_seq END .  (reduce by rule 17)



	.	reduce by rule 17


state 83:

	type_decl : TYPE ID EQ type_val .  (reduce by rule 48)



	.	reduce by rule 48


state 84:

	type_val : ARRAY . OF ID 

	OF	shift 98


	.	error


state 85:

	type_val : LBRACE . type_fields RBRACE 

	ID	shift 91

	type_fields	goto 99
	type_field	goto 89

	.	reduce by rule 54


state 86:

	type_val : ID .  (reduce by rule 49)



	.	reduce by rule 49


state 87:

	expr : expr . binary_op expr 
	var_decl : VAR ID ASSIGN expr .  (reduce by rule 56)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 56


state 88:

	var_decl : VAR ID COLON ID . ASSIGN expr 

	ASSIGN	shift 100


	.	error


state 89:

	type_fields : type_field .  (reduce by rule 52)



	.	reduce by rule 52


state 90:

	type_fields : type_fields . COMMA type_field 
	func_decl : FUNCTION ID LPAREN type_fields . RPAREN EQ expr 
	func_decl : FUNCTION ID LPAREN type_fields . RPAREN COLON ID EQ expr 

	COMMA	shift 102
	RPAREN	shift 101


	.	error


state 91:

	type_field : ID . COLON ID 

	COLON	shift 103


	.	error


state 92:

	expr : FOR ID ASSIGN expr TO . expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 104
	lvalue	goto 1

	.	error


state 93:

	expr : IF expr THEN expr ELSE . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 105
	lvalue	goto 1

	.	error


state 94:

	field_list : field_list COMMA ID . EQ expr 

	EQ	shift 106


	.	error


state 95:

	expr : expr . binary_op expr 
	field_list : ID EQ expr .  (reduce by rule 37)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 37


state 96:

	expr : ID LBRACK expr RBRACK OF . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 107
	lvalue	goto 1

	.	error


state 97:

	expr : expr . binary_op expr 
	expr_list : expr_list COMMA expr .  (reduce by rule 33)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 33


state 98:

	type_val : ARRAY OF . ID 

	ID	shift 108


	.	error


state 99:

	type_val : LBRACE type_fields . RBRACE 
	type_fields : type_fields . COMMA type_field 

	COMMA	shift 102
	RBRACE	shift 109


	.	error


state 100:

	var_decl : VAR ID COLON ID ASSIGN . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 110
	lvalue	goto 1

	.	error


state 101:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN . EQ expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN . COLON ID EQ expr 

	COLON	shift 112
	EQ	shift 111


	.	error


state 102:

	type_fields : type_fields COMMA . type_field 

	ID	shift 91

	type_field	goto 113

	.	error


state 103:

	type_field : ID COLON . ID 

	ID	shift 114


	.	error


state 104:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr TO expr . DO expr 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 115

	binary_op	goto 17

	.	error


state 105:

	expr : expr . binary_op expr 
	expr : IF expr THEN expr ELSE expr .  (reduce by rule 13)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 13


state 106:

	field_list : field_list COMMA ID EQ . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 116
	lvalue	goto 1

	.	error

error:  state 107: shift/reduce conflict (shift OR, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift AND, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift GE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift GT, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift LE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift LT, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift NEQ, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift EQ, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift DIVIDE, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift TIMES, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift MINUS, reduce by rule 11)
error:  state 107: shift/reduce conflict (shift PLUS, reduce by rule 11)

state 107:

	expr : expr . binary_op expr 
	expr : ID LBRACK expr RBRACK OF expr .  (reduce by rule 11)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 11


state 108:

	type_val : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 109:

	type_val : LBRACE type_fields RBRACE .  (reduce by rule 50)



	.	reduce by rule 50


state 110:

	expr : expr . binary_op expr 
	var_decl : VAR ID COLON ID ASSIGN expr .  (reduce by rule 57)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 57


state 111:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN EQ . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 117
	lvalue	goto 1

	.	error


state 112:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON . ID EQ expr 

	ID	shift 118


	.	error


state 113:

	type_fields : type_fields COMMA type_field .  (reduce by rule 53)



	.	reduce by rule 53


state 114:

	type_field : ID COLON ID .  (reduce by rule 55)



	.	reduce by rule 55


state 115:

	expr : FOR ID ASSIGN expr TO expr DO . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 119
	lvalue	goto 1

	.	error


state 116:

	expr : expr . binary_op expr 
	field_list : field_list COMMA ID EQ expr .  (reduce by rule 36)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 36


state 117:

	expr : expr . binary_op expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN EQ expr .  (reduce by rule 58)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 58


state 118:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID . EQ expr 

	EQ	shift 120


	.	error

error:  state 119: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 119:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr TO expr DO expr .  (reduce by rule 15)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 15


state 120:

	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 121
	lvalue	goto 1

	.	error


state 121:

	expr : expr . binary_op expr 
	func_decl : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ expr .  (reduce by rule 59)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	binary_op	goto 17

	.	reduce by rule 59


state 122:


	EOF	accept


	.	error

384 of 761 action table entries left after compaction
97 goto table entries
