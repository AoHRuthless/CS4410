
state 0:

	program : . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 50
	expr	goto 2
	lvalue	goto 1

	.	error


state 1:

	expr : lvalue .  (reduce by rule 4)
	expr : lvalue . ASSIGN expr 

	ASSIGN	shift 14


	.	reduce by rule 4


state 2:

	program : expr .  (reduce by rule 0)
	expr : expr . binary_op expr 


	binary_op	goto 15

	.	reduce by rule 0


state 3:

	expr : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 4:

	expr : BREAK .  (reduce by rule 16)



	.	reduce by rule 16


state 5:

	expr : LET . decl_seq IN expr_seq END 


	decl_seq	goto 16

	.	error


state 6:

	expr : FOR . ID ASSIGN expr TO expr DO expr 

	ID	shift 17


	.	error


state 7:

	expr : WHILE . expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 18
	lvalue	goto 1

	.	error


state 8:

	expr : IF . expr THEN expr 
	expr : IF . expr THEN expr ELSE expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 19
	lvalue	goto 1

	.	error


state 9:

	expr : MINUS .  (reduce by rule 5)



	.	reduce by rule 5


state 10:

	expr : LPAREN . expr_seq RPAREN 


	expr_seq	goto 20

	.	error


state 11:

	expr : STRING .  (reduce by rule 1)



	.	reduce by rule 1


state 12:

	expr : INT .  (reduce by rule 2)



	.	reduce by rule 2


state 13:

	expr : ID . LPAREN expr_list RPAREN 
	expr : ID . LBRACE field_list RBRACE 
	expr : ID . LBRACK expr RBRACK OF expr 

	LPAREN	shift 23
	LBRACK	shift 22
	LBRACE	shift 21


	.	error


state 14:

	expr : lvalue ASSIGN . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 24
	lvalue	goto 1

	.	error


state 15:

	expr : expr binary_op . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 25
	lvalue	goto 1

	.	error


state 16:

	expr : LET decl_seq . IN expr_seq END 

	IN	shift 26


	.	error


state 17:

	expr : FOR ID . ASSIGN expr TO expr DO expr 

	ASSIGN	shift 27


	.	error


state 18:

	expr : expr . binary_op expr 
	expr : WHILE expr . DO expr 

	DO	shift 28

	binary_op	goto 15

	.	error


state 19:

	expr : expr . binary_op expr 
	expr : IF expr . THEN expr 
	expr : IF expr . THEN expr ELSE expr 

	THEN	shift 29

	binary_op	goto 15

	.	error


state 20:

	expr : LPAREN expr_seq . RPAREN 

	RPAREN	shift 30


	.	error


state 21:

	expr : ID LBRACE . field_list RBRACE 


	field_list	goto 31

	.	error


state 22:

	expr : ID LBRACK . expr RBRACK OF expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 32
	lvalue	goto 1

	.	error


state 23:

	expr : ID LPAREN . expr_list RPAREN 


	expr_list	goto 33

	.	error


state 24:

	expr : expr . binary_op expr 
	expr : lvalue ASSIGN expr .  (reduce by rule 7)


	binary_op	goto 15

	.	reduce by rule 7


state 25:

	expr : expr . binary_op expr 
	expr : expr binary_op expr .  (reduce by rule 6)


	binary_op	goto 15

	.	reduce by rule 6


state 26:

	expr : LET decl_seq IN . expr_seq END 


	expr_seq	goto 34

	.	error


state 27:

	expr : FOR ID ASSIGN . expr TO expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 35
	lvalue	goto 1

	.	error


state 28:

	expr : WHILE expr DO . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 36
	lvalue	goto 1

	.	error


state 29:

	expr : IF expr THEN . expr 
	expr : IF expr THEN . expr ELSE expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 37
	lvalue	goto 1

	.	error


state 30:

	expr : LPAREN expr_seq RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 31:

	expr : ID LBRACE field_list . RBRACE 

	RBRACE	shift 38


	.	error


state 32:

	expr : expr . binary_op expr 
	expr : ID LBRACK expr . RBRACK OF expr 

	RBRACK	shift 39

	binary_op	goto 15

	.	error


state 33:

	expr : ID LPAREN expr_list . RPAREN 

	RPAREN	shift 40


	.	error


state 34:

	expr : LET decl_seq IN expr_seq . END 

	END	shift 41


	.	error


state 35:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr . TO expr DO expr 

	TO	shift 42

	binary_op	goto 15

	.	error


state 36:

	expr : expr . binary_op expr 
	expr : WHILE expr DO expr .  (reduce by rule 14)


	binary_op	goto 15

	.	reduce by rule 14


state 37:

	expr : expr . binary_op expr 
	expr : IF expr THEN expr .  (reduce by rule 12)
	expr : IF expr THEN expr . ELSE expr 

	ELSE	shift 43

	binary_op	goto 15

	.	reduce by rule 12


state 38:

	expr : ID LBRACE field_list RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 39:

	expr : ID LBRACK expr RBRACK . OF expr 

	OF	shift 44


	.	error


state 40:

	expr : ID LPAREN expr_list RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 41:

	expr : LET decl_seq IN expr_seq END .  (reduce by rule 17)



	.	reduce by rule 17


state 42:

	expr : FOR ID ASSIGN expr TO . expr DO expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 45
	lvalue	goto 1

	.	error


state 43:

	expr : IF expr THEN expr ELSE . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 46
	lvalue	goto 1

	.	error


state 44:

	expr : ID LBRACK expr RBRACK OF . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 47
	lvalue	goto 1

	.	error


state 45:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr TO expr . DO expr 

	DO	shift 48

	binary_op	goto 15

	.	error


state 46:

	expr : expr . binary_op expr 
	expr : IF expr THEN expr ELSE expr .  (reduce by rule 13)


	binary_op	goto 15

	.	reduce by rule 13


state 47:

	expr : expr . binary_op expr 
	expr : ID LBRACK expr RBRACK OF expr .  (reduce by rule 11)


	binary_op	goto 15

	.	reduce by rule 11


state 48:

	expr : FOR ID ASSIGN expr TO expr DO . expr 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	expr	goto 49
	lvalue	goto 1

	.	error


state 49:

	expr : expr . binary_op expr 
	expr : FOR ID ASSIGN expr TO expr DO expr .  (reduce by rule 15)


	binary_op	goto 15

	.	reduce by rule 15


state 50:


	EOF	accept


	.	error

30 of 213 action table entries left after compaction
45 goto table entries
